#ifndef _TESTS_COMPACT_UDT_TESTDATA_H_
#define _TESTS_COMPACT_UDT_TESTDATA_H_

namespace {
std::vector<CBuffer> type_id_pool = {
    CBuffer({
        0x4F, 0x25, 0x89, 0x0F, 0x64, 0x1A, 0xE7, 0xE3, 0xE0, 0x61, 0xB8,
        0x15, 0x03, 0xA1, 0xF3, 0x47, 0x27, 0x8B, 0x3D, 0x25, 0x5E, 0x98,
        0x2C, 0x79, 0x0A, 0x15, 0x41, 0x5B, 0x20, 0x9D, 0xF0, 0xD9,
    }),
    CBuffer({
        0x9B, 0x9B, 0x0C, 0xD3, 0xB0, 0x37, 0xD0, 0x16, 0x2A, 0x88, 0x8A,
        0xED, 0x18, 0x5A, 0x8D, 0x4A, 0xCF, 0xA2, 0x5B, 0x8D, 0xDE, 0x01,
        0x21, 0xCC, 0x62, 0x6F, 0x9C, 0x97, 0x4E, 0x3E, 0x91, 0x48,
    }),
    CBuffer({
        0xDA, 0x8A, 0x06, 0x61, 0x15, 0xA8, 0x96, 0xAC, 0x3B, 0x66, 0xFF,
        0x22, 0x88, 0x16, 0x01, 0xF1, 0x89, 0xC6, 0xFE, 0x36, 0xDA, 0x3B,
        0x7A, 0xF8, 0x87, 0x2E, 0xA9, 0xDA, 0x37, 0xA8, 0xBF, 0x55,
    }),
    CBuffer({
        0x24, 0x7E, 0x3A, 0xA8, 0xE2, 0xD9, 0x81, 0x67, 0x94, 0x6C, 0x92,
        0x71, 0xB9, 0xBF, 0xFB, 0xE4, 0x20, 0x39, 0x9F, 0xD7, 0x96, 0xA8,
        0x13, 0x5B, 0x69, 0x17, 0x19, 0x89, 0x3D, 0x04, 0x8E, 0x6A,
    }),
    CBuffer({
        0xFD, 0xC8, 0x0B, 0x92, 0xCB, 0x73, 0x54, 0x13, 0x0D, 0x30, 0x8E,
        0x71, 0x93, 0xBC, 0x07, 0x0C, 0x8D, 0xB2, 0xA2, 0x23, 0x19, 0x95,
        0xEC, 0x9D, 0xE8, 0x9E, 0xD5, 0x12, 0xD1, 0x55, 0xEF, 0x82,
    }),
    CBuffer({
        0x66, 0x41, 0x15, 0x50, 0xFD, 0x96, 0x87, 0xDB, 0x31, 0xD9, 0x84,
        0x58, 0x26, 0x5A, 0x9D, 0xD2, 0x24, 0x6C, 0xC6, 0x0F, 0xAF, 0x63,
        0xC3, 0x43, 0xE8, 0x06, 0x35, 0xB5, 0xC5, 0x37, 0x7A, 0x46,
    }),
    CBuffer({
        0x00, 0x32, 0x14, 0x84, 0x62, 0x9A, 0x08, 0x44, 0x2F, 0xAA, 0x5E,
        0x65, 0xB6, 0x19, 0x02, 0xA1, 0x9F, 0x92, 0x48, 0x93, 0x27, 0x9A,
        0xD7, 0xE8, 0x39, 0xFA, 0xC2, 0xC7, 0x76, 0xA6, 0x68, 0xF0,
    }),
    CBuffer({
        0x0B, 0x00, 0xF3, 0x47, 0x66, 0x93, 0xBC, 0xAC, 0x7B, 0x85, 0x61,
        0xE8, 0x0E, 0x72, 0x86, 0x7C, 0x56, 0xEB, 0x4F, 0x40, 0xB7, 0xB4,
        0x63, 0xC5, 0xBC, 0x7A, 0x45, 0xAE, 0xCB, 0x65, 0x18, 0x22,
    }),
    CBuffer({
        0x55, 0x51, 0x63, 0xCE, 0xB9, 0x2D, 0xE0, 0x18, 0x2C, 0x76, 0x3F,
        0x1C, 0x73, 0xE7, 0x6A, 0x33, 0x75, 0xF2, 0xB3, 0x95, 0x7A, 0x99,
        0xB2, 0xC9, 0x31, 0x47, 0x39, 0x73, 0x59, 0x33, 0xB0, 0x7F,
    }),
    CBuffer({
        0x79, 0x4C, 0x95, 0x88, 0x2A, 0x01, 0x9C, 0xF3, 0xB8, 0x1B, 0x4B,
        0x08, 0x9D, 0x75, 0xFE, 0x25, 0xDC, 0x04, 0xEF, 0xC5, 0xA8, 0x6F,
        0x8F, 0x12, 0x9F, 0xA2, 0x50, 0x03, 0x1A, 0x53, 0xED, 0xFA,
    }),
    CBuffer({
        0x38, 0xF3, 0xC2, 0xB8, 0x1E, 0x96, 0x50, 0x73, 0x2F, 0xB9, 0x66,
        0x0D, 0xC3, 0x1F, 0x54, 0x67, 0xB3, 0x1A, 0xA1, 0x26, 0x5A, 0xE6,
        0x70, 0x27, 0xFC, 0x88, 0x1B, 0xD1, 0xAE, 0x6D, 0x6F, 0x61,
    }),
    CBuffer({
        0x65, 0x5F, 0x04, 0x10, 0x60, 0x84, 0x63, 0x40, 0xE4, 0xE7, 0x18,
        0xE5, 0x38, 0xD2, 0xA1, 0xDE, 0x1A, 0xDB, 0xEE, 0x5D, 0x31, 0xA9,
        0x4C, 0xE0, 0x60, 0x48, 0x9E, 0xCB, 0x30, 0x97, 0xF7, 0x72,
    }),
    CBuffer({
        0x6B, 0x65, 0x73, 0x31, 0x5D, 0xED, 0xED, 0xBB, 0xF2, 0xB4, 0x89,
        0xF9, 0x27, 0xB4, 0xB8, 0x05, 0x9F, 0x4E, 0xA3, 0xD9, 0x97, 0xE1,
        0xA1, 0xD4, 0x21, 0x97, 0x72, 0x2A, 0xD2, 0xE3, 0x3C, 0xB9,
    }),
    CBuffer({
        0x33, 0xA1, 0xB1, 0xDC, 0x4B, 0x86, 0xA2, 0xE5, 0x1E, 0xB4, 0x40,
        0xF2, 0x83, 0x5E, 0x3D, 0x47, 0xCD, 0x97, 0x5E, 0xA1, 0xC4, 0x01,
        0x8F, 0x50, 0x12, 0x09, 0x38, 0xB8, 0xF1, 0x31, 0xDA, 0x16,
    }),
    CBuffer({
        0x3D, 0xCB, 0x40, 0xE8, 0xAC, 0xC5, 0x30, 0xD1, 0x7B, 0x29, 0xAA,
        0xD8, 0x53, 0xE3, 0x1A, 0x30, 0xD7, 0xE5, 0x9D, 0xBE, 0x52, 0x0A,
        0x01, 0x87, 0xD0, 0x40, 0x55, 0x23, 0xA1, 0x6E, 0xED, 0xC3,
    }),
    CBuffer({
        0xE0, 0xC9, 0x75, 0x5C, 0xE7, 0xF4, 0x1A, 0x54, 0x3A, 0x98, 0x2E,
        0x6F, 0x1A, 0x9F, 0x36, 0xD4, 0x4E, 0x71, 0xF8, 0x57, 0x1A, 0x06,
        0x9B, 0x27, 0x25, 0x5B, 0x47, 0x33, 0x0B, 0xE6, 0xC6, 0x53,
    }),
    CBuffer({
        0x84, 0x89, 0x36, 0x97, 0xDE, 0x26, 0x52, 0x2E, 0x41, 0x8E, 0x50,
        0xE9, 0x19, 0x52, 0x40, 0x61, 0x72, 0x5B, 0x60, 0x1C, 0x2C, 0xC7,
        0x83, 0xE3, 0xAA, 0xA7, 0x93, 0x31, 0x3D, 0x7A, 0x00, 0x3C,
    }),
    CBuffer({
        0xA5, 0x61, 0x68, 0xB3, 0x66, 0x24, 0x91, 0x4D, 0xAA, 0x3B, 0xB4,
        0x23, 0xAE, 0xFC, 0xE4, 0xDF, 0x38, 0x8E, 0x38, 0xF8, 0xB2, 0x21,
        0x70, 0x13, 0x05, 0xDF, 0x84, 0x4C, 0x23, 0xE5, 0x9F, 0x54,
    }),
    CBuffer({
        0x43, 0xD4, 0x9D, 0x73, 0xB9, 0x21, 0x1B, 0xB9, 0x34, 0x9B, 0x8E,
        0x94, 0x89, 0x93, 0xFC, 0x3A, 0x9E, 0x37, 0xE5, 0x5A, 0xD6, 0xFA,
        0x3E, 0x03, 0x47, 0xFE, 0x96, 0xAB, 0xCA, 0xDF, 0x5E, 0xB3,
    }),
    CBuffer({
        0x1E, 0x04, 0xFB, 0x28, 0x90, 0xAE, 0x56, 0x70, 0x95, 0x8A, 0x21,
        0x6B, 0x96, 0x47, 0x14, 0xAE, 0x46, 0x6C, 0x15, 0x76, 0x8A, 0x54,
        0xE3, 0xC9, 0x59, 0x8A, 0x71, 0x22, 0xFD, 0x01, 0xB3, 0x1D,
    }),
    CBuffer({
        0x74, 0xD5, 0xE8, 0x42, 0xEC, 0x10, 0x08, 0xDC, 0xCD, 0x26, 0x31,
        0x89, 0xBF, 0xB8, 0x78, 0xE3, 0x9E, 0x13, 0x1C, 0xCF, 0x2D, 0x03,
        0x6A, 0x03, 0xC9, 0x3D, 0x7C, 0x2A, 0x8C, 0xE5, 0x82, 0xB0,
    }),
    CBuffer({
        0x74, 0x44, 0x51, 0x85, 0xA9, 0xF4, 0xD0, 0x0B, 0x82, 0x54, 0xBF,
        0x09, 0x11, 0x6C, 0x86, 0x3C, 0xE9, 0xE0, 0x4B, 0xC3, 0x49, 0xF6,
        0x32, 0xA4, 0x5E, 0x25, 0x34, 0x1F, 0x1E, 0x69, 0x91, 0xC4,
    }),
    CBuffer({
        0xC9, 0x58, 0xC6, 0xA6, 0x7F, 0xD0, 0xEA, 0x08, 0x8D, 0xEC, 0x54,
        0x6E, 0x3C, 0xD1, 0xAC, 0x16, 0x6E, 0x84, 0xF1, 0x93, 0x71, 0xD4,
        0xB2, 0xA8, 0x94, 0x32, 0x3F, 0x58, 0xF1, 0xAA, 0x61, 0xC5,
    }),
    CBuffer({
        0x57, 0xFE, 0x89, 0x44, 0xE2, 0xAD, 0x4C, 0x81, 0xFE, 0xC1, 0x3E,
        0x64, 0x66, 0x58, 0x8C, 0x93, 0xB6, 0x6F, 0xAE, 0x69, 0x93, 0xC7,
        0x96, 0xB1, 0x52, 0xF3, 0x45, 0x35, 0x80, 0x03, 0x1F, 0xCE,
    }),
    CBuffer({
        0x8C, 0xBE, 0x4A, 0x52, 0x51, 0xB5, 0x27, 0x1D, 0x40, 0xB5, 0xF6,
        0x28, 0x12, 0xC1, 0x46, 0x8A, 0x3A, 0x54, 0x5B, 0x90, 0x7F, 0x40,
        0x24, 0xFA, 0xED, 0x06, 0x12, 0xB8, 0x43, 0xB6, 0xED, 0x09,
    }),
    CBuffer({
        0xA9, 0x3A, 0x5A, 0x84, 0xFE, 0x1D, 0xF0, 0xB2, 0xAB, 0xE2, 0x61,
        0xF2, 0xE9, 0x0A, 0xDB, 0x0C, 0xA4, 0x54, 0x19, 0x17, 0xF8, 0x54,
        0x1F, 0x40, 0xEC, 0x40, 0x1F, 0x5C, 0xA4, 0xD3, 0x82, 0x1F,
    }),
    CBuffer({
        0x19, 0x9A, 0x40, 0x6C, 0x7B, 0x20, 0x03, 0xB7, 0xBE, 0x6F, 0x84,
        0x7F, 0x7D, 0xD4, 0xB2, 0xE1, 0x19, 0xC5, 0x7F, 0x53, 0x96, 0xF3,
        0x36, 0xC0, 0x38, 0xF2, 0xCB, 0xD1, 0x28, 0x2E, 0xE2, 0xD7,
    }),
    CBuffer({
        0x71, 0x2E, 0x7A, 0x6D, 0xFB, 0xB0, 0x33, 0xDC, 0xDB, 0x97, 0x42,
        0x83, 0xEC, 0xE9, 0xDB, 0x66, 0x4F, 0xF0, 0xFA, 0x78, 0xCA, 0xBE,
        0x51, 0x4E, 0xBC, 0x23, 0x6A, 0x13, 0xA6, 0x9A, 0x4F, 0xF4,
    }),
    CBuffer({
        0xB2, 0x8B, 0x33, 0x29, 0xF7, 0x55, 0xB4, 0xB7, 0x98, 0x24, 0x49,
        0x9C, 0xD8, 0x5C, 0xC9, 0xD1, 0xDC, 0x50, 0x52, 0xC3, 0xCA, 0xE7,
        0x42, 0xAF, 0x06, 0x13, 0x8D, 0x83, 0x91, 0x3D, 0x02, 0x97,
    }),
    CBuffer({
        0xE0, 0x75, 0x70, 0x4F, 0x15, 0x92, 0x92, 0x86, 0x91, 0x6E, 0x81,
        0xF3, 0x44, 0xF5, 0x9A, 0x5B, 0x8D, 0xEC, 0xC0, 0x09, 0x40, 0x13,
        0x6D, 0x29, 0x5F, 0x72, 0xDB, 0xF2, 0xB6, 0xD8, 0x38, 0x0D,
    }),
    CBuffer({
        0xCB, 0x5F, 0xF1, 0x18, 0x29, 0x1A, 0xD9, 0xAB, 0xED, 0x14, 0x43,
        0xAF, 0x7B, 0xA5, 0x39, 0x30, 0x2D, 0xF5, 0x48, 0xAD, 0x84, 0xBA,
        0x35, 0x43, 0xC7, 0xB7, 0xD4, 0x77, 0x3C, 0x57, 0xB7, 0xC8,
    }),
    CBuffer({
        0x27, 0x05, 0x50, 0xF6, 0xA9, 0xAD, 0x9C, 0x45, 0xB5, 0x36, 0x26,
        0x37, 0x92, 0x17, 0x15, 0x82, 0x17, 0x63, 0x2E, 0x03, 0xED, 0xB9,
        0x05, 0x68, 0x89, 0x11, 0xDE, 0xB1, 0xA1, 0xA3, 0x4F, 0x3D,
    }),
};
CBuffer key_00 = {
    0x00, 0x14, 0xF2, 0x66, 0x05, 0x12, 0x33, 0xFE, 0x0F, 0x3F, 0xA4,
    0x74, 0x53, 0x08, 0xB1, 0x04, 0x2B, 0xAA, 0x36, 0x0D, 0x51, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
CBuffer val_00 = {
    0xE0, 0xF2, 0xCB, 0xEE, 0x7A, 0x13, 0xAE, 0x07, 0x28, 0xC3, 0x4E,
    0x9A, 0x20, 0xDC, 0xF2, 0x20, 0x30, 0x69, 0x9A, 0x8F, 0xD5, 0xED,
    0xC0, 0x4E, 0xC6, 0x82, 0xC3, 0x33, 0xA5, 0x3E, 0x91, 0xBD,
};
CBuffer key_01 = {
    0x00, 0xB8, 0xD2, 0x5B, 0xFA, 0xBD, 0x8D, 0x90, 0xE7, 0x85, 0x48,
    0x6C, 0xCD, 0xEE, 0x4A, 0xA1, 0x53, 0xDB, 0x6C, 0x29, 0x30, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
CBuffer val_01 = {
    0x57, 0xB5, 0x5A, 0x89, 0x70, 0xF3, 0x87, 0x0A, 0xF7, 0x5C, 0x97,
    0x00, 0x7C, 0x97, 0x5F, 0x17, 0xC4, 0x25, 0xC1, 0x87, 0x95, 0x06,
    0xAE, 0x19, 0x1E, 0x5C, 0x3D, 0xA3, 0xDE, 0x18, 0xA5, 0xF3,
};
CBuffer key_02 = {
    0x00, 0x89, 0xE5, 0xAD, 0x1D, 0xD4, 0xF5, 0xE7, 0xB1, 0x23, 0x83,
    0x5D, 0x5D, 0x76, 0x35, 0x82, 0xED, 0xDF, 0x07, 0xD6, 0x94, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
CBuffer val_02 = {
    0xAE, 0x9B, 0xE1, 0xF7, 0xE1, 0xC4, 0x8D, 0xEC, 0xFC, 0xB0, 0x0F,
    0x29, 0xD4, 0x16, 0x43, 0x30, 0xCF, 0xD5, 0x00, 0x39, 0x2F, 0x95,
    0xCE, 0x0C, 0x6E, 0x95, 0x93, 0x28, 0xE0, 0x9C, 0x5C, 0xEF,
};
CBuffer key_03 = {
    0x00, 0x7E, 0x69, 0xF2, 0xEB, 0xC8, 0x97, 0xC2, 0xD1, 0x9B, 0xFE,
    0x06, 0xD2, 0x1F, 0x53, 0x3E, 0xDE, 0x99, 0xFD, 0xA1, 0xD9, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
CBuffer val_03 = {
    0x53, 0x82, 0xB6, 0x30, 0x02, 0x15, 0x84, 0x1F, 0x3F, 0xA9, 0x1F,
    0xD3, 0x03, 0x2F, 0x98, 0xAA, 0x78, 0xDF, 0x07, 0x10, 0xD5, 0x0C,
    0x43, 0x7B, 0x06, 0x1A, 0x57, 0x06, 0xA0, 0xCF, 0x20, 0x7B,
};
CBuffer key_04 = {
    0x00, 0x21, 0xF1, 0xF3, 0x76, 0xF5, 0x08, 0x33, 0x99, 0xE4, 0xEC,
    0xF4, 0x91, 0x70, 0x7E, 0xB1, 0xC3, 0xC8, 0x9B, 0xBC, 0xFC, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
CBuffer val_04 = {
    0x13, 0xFC, 0xF2, 0x98, 0x68, 0xCA, 0x7F, 0x34, 0xE0, 0x6B, 0xCF,
    0x2F, 0xF4, 0x16, 0x28, 0xA6, 0x5B, 0xA8, 0x44, 0xD7, 0xBF, 0xDB,
    0xDB, 0x4F, 0x80, 0x92, 0x32, 0x01, 0x9B, 0x00, 0xF4, 0x83,
};
CBuffer key_05 = {
    0x00, 0xFD, 0x89, 0xA5, 0x43, 0x5C, 0x1E, 0xF2, 0xCD, 0xD9, 0x66,
    0x64, 0xF5, 0x03, 0xD2, 0x29, 0x05, 0x28, 0x9B, 0x1E, 0x64, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
CBuffer val_05 = {
    0x62, 0x6C, 0xC5, 0xAD, 0xE6, 0x54, 0xAC, 0xCE, 0x29, 0xB4, 0x28,
    0xF6, 0x34, 0x7F, 0x98, 0x8F, 0x72, 0xAF, 0xE7, 0xB2, 0xD2, 0xEC,
    0x54, 0x88, 0x91, 0x50, 0xFE, 0x49, 0x54, 0x57, 0xE8, 0xBB,
};
CBuffer key_06 = {
    0x00, 0x92, 0x0E, 0x47, 0x54, 0x18, 0x58, 0xE9, 0x43, 0x81, 0x5C,
    0xFD, 0x8A, 0x78, 0xF8, 0xF1, 0x9D, 0x1E, 0xF0, 0x56, 0x95, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
CBuffer val_06 = {
    0xDD, 0x57, 0x77, 0x91, 0xD2, 0xA4, 0x59, 0xB4, 0x36, 0xE2, 0xC2,
    0xB0, 0xB4, 0x67, 0xE6, 0x63, 0x84, 0xAF, 0x04, 0xB6, 0x9A, 0x3C,
    0x1E, 0xF7, 0xD8, 0x6E, 0x37, 0xE9, 0xD0, 0x0D, 0xB1, 0x0F,
};
CBuffer key_07 = {
    0x00, 0xB7, 0x04, 0xB0, 0xBC, 0xD3, 0xB4, 0xE2, 0x16, 0xB7, 0x1D,
    0xB6, 0x50, 0x91, 0xA0, 0xD8, 0x25, 0x5E, 0x3A, 0x52, 0xCC, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
CBuffer val_07 = {
    0xEC, 0xCB, 0x04, 0xA5, 0x10, 0x42, 0x6F, 0x6E, 0x82, 0x9F, 0x5A,
    0x8A, 0x84, 0xC5, 0x12, 0x69, 0x14, 0x54, 0x71, 0x9E, 0x6D, 0xD4,
    0xF5, 0x88, 0x3F, 0x2C, 0x14, 0xE6, 0x80, 0x0D, 0x3C, 0xAF,
};
CBuffer key_08 = {
    0x00, 0x6D, 0x0B, 0x78, 0x1D, 0xB4, 0xC9, 0x43, 0x74, 0x33, 0x66,
    0x28, 0xBD, 0x8F, 0xB5, 0x23, 0x07, 0xEB, 0x71, 0x14, 0x34, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
CBuffer val_08 = {
    0x3D, 0xE9, 0x4B, 0x5B, 0x65, 0x37, 0x57, 0xA6, 0xA0, 0xA6, 0xBC,
    0x6D, 0x8A, 0xD2, 0x9B, 0x22, 0x6F, 0x9A, 0x21, 0x9A, 0xEF, 0x0C,
    0x3A, 0x01, 0xDA, 0xCA, 0x9E, 0x51, 0x65, 0x88, 0x51, 0xCF,
};
CBuffer key_09 = {
    0x00, 0x5A, 0xF4, 0x8D, 0x40, 0x30, 0x9E, 0x8E, 0x77, 0xC8, 0x63,
    0x9C, 0x80, 0x18, 0xB8, 0x41, 0x96, 0xB6, 0x53, 0x8A, 0x29, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
CBuffer val_09 = {
    0x9C, 0x44, 0x69, 0xD4, 0x6E, 0x56, 0x11, 0x9A, 0xA9, 0xEA, 0xE4,
    0xA9, 0x2A, 0xB1, 0x25, 0x82, 0x63, 0x46, 0x8F, 0x14, 0xCF, 0xF5,
    0xA3, 0x27, 0xE7, 0xCC, 0x78, 0x45, 0x6E, 0x58, 0x9D, 0xA6,
};
VDUsers users00 = {
    VDUser(key_00, 10),
    VDUser(key_01, 100),
    VDUser(key_02, 500),
    VDUser(key_03, 10),
};
CBuffer proof_00 = {
    0x4C, 0x4F, 0xA6, 0x4C, 0x4F, 0xA6, 0x48, 0x4C, 0x4F,
    0xA6, 0x4C, 0x4F, 0xA6, 0x48, 0x48, 0x4F, 0x58,
};
VDUsers users01 = {
    VDUser(key_00, 100),
    VDUser(key_02, 1000),
    VDUser(key_04, 50),
    VDUser(key_05, 300),
};
CBuffer proof_01 = {
    0x4C, 0x4F, 0xA5, 0x4C, 0x4F, 0xA5, 0x48, 0x4F, 0x01, 0x4C,
    0x4F, 0xA6, 0x4C, 0x4F, 0xA6, 0x48, 0x48, 0x4F, 0x58,
};
VDUsers users02 = {
    VDUser(key_02, 100),
    VDUser(key_04, 1100),
    VDUser(key_06, 5000),
};
CBuffer proof_02 = {
    0x4C, 0x4F, 0xA0, 0x4C, 0x4F, 0xA0, 0x48, 0x4F,
    0x05, 0x4C, 0x4F, 0xA6, 0x48, 0x4F, 0x59,
};
}  // namespace
inline void gen_test_data(GenerateTransaction* tx) {
  int cell0 = tx->add_cell(10000, users00, true, proof_00, true);
  int cell1 = tx->add_cell(50000, users01, true, proof_01, false);
  int cell2 = tx->add_cell(50000, users02, false, proof_02, false);
  tx->add_transfer(cell0, key_00, cell1, key_02, 50, 1);
  tx->add_transfer(cell0, key_02, cell0, key_00, 300, 1);
  tx->add_transfer(cell1, key_02, cell2, key_06, 100, 10);
  tx->add_transfer(cell1, key_00, cell1, key_02, 10, 10);
  tx->add_transfer(cell2, key_04, cell0, key_00, 1000, 10);
  tx->add_transfer(cell0, key_00, cell2, key_06, 20, 30);
}
inline CHash get_cudt_script_code_hash() {
  CBuffer v00 = {
      0xCA, 0x81, 0x67, 0x64, 0x92, 0x29, 0xB7, 0x65, 0xE5, 0x1E, 0x97,
      0x8D, 0x1E, 0xAC, 0x7B, 0xB9, 0x82, 0xFF, 0x46, 0xAB, 0x91, 0xEF,
      0x67, 0xEF, 0x48, 0x58, 0x2A, 0xD9, 0xDF, 0xAB, 0xAF, 0xB4,
  };
  return v00;
}
inline CHash get_other_script_code_hash() {
  CBuffer v00 = {
      0x45, 0xFE, 0xB5, 0x34, 0x44, 0x77, 0x1D, 0x3D, 0x75, 0xFF, 0x78,
      0xA6, 0xDC, 0xB1, 0xF3, 0x65, 0x6C, 0x43, 0x28, 0xFA, 0xF3, 0xE6,
      0x7F, 0xD7, 0x03, 0xFD, 0x43, 0xCA, 0xA3, 0x87, 0xDA, 0x9E,
  };
  return v00;
}
inline CHash get_new_type_id() {
  static size_t count = 0;
  ASSERT_DBG((count < type_id_pool.size()));
  return type_id_pool[count++];
}

#endif  // _TESTS_COMPACT_UDT_TESTDATA_H_
